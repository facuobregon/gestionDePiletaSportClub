@model gestionDePiletaSportClub.ViewModels.AddUserViewModel
@{
    ViewBag.Title = "Nuevo Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2> Crear Usuario </h2>
<hr />
<div class="row">
    <div class="col-xs-12 col-md-offset-2 col-md-8">

        @using (Html.BeginForm("RegisterSportClubUser", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
        {
        <fieldset>

            <div class="form-group">
                @Html.LabelFor(M => Model.User.Name)
                @Html.TextBoxFor(M => Model.User.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.User.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(M => Model.User.LastName)
                @Html.TextBoxFor(M => Model.User.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.User.LastName)
            </div>
            <div class="form-group">
                @Html.LabelFor(M => Model.User.DNI)
                @Html.TextBoxFor(M => Model.User.DNI, new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.User.DNI)
            </div>
            <div class="form-group">
                @Html.LabelFor(M => Model.User.Email)
                @Html.TextBoxFor(M => Model.User.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.User.Email)
            </div>
            <div class="form-group">
                @Html.LabelFor(M => Model.User.BirthDay)
                @Html.TextBoxFor(M => Model.User.BirthDay, "{0:d MMM yyyy}", new { @class = "form-control", @placeholder = "1 ENE 2020" })
            </div>

            <div class="form-group">
                @Html.LabelFor(M => Model.User.PhoneNumber)
                @Html.TextBoxFor(M => Model.User.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.User.PhoneNumber)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => Model.Password)
                @Html.PasswordFor(m => Model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.Password)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.ConfirmPassword)
                @Html.PasswordFor(m => Model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.ConfirmPassword)
            </div>

            <div class="form-group">
                @Html.LabelFor(M => Model.User.MembershipTypeId)
                @Html.DropDownListFor(M => Model.User.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Seleccione la edad del socio...", new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.User.MembershipTypeId)
            </div>

            <div class="form-group">
                @Html.LabelFor(M => Model.User.LevelId)
                @Html.DropDownListFor(M => Model.User.LevelId, new SelectList(Model.Levels, "Id", "Name"), "Seleccione el nivel del socio...", new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.User.LevelId)
            </div>

            <div class="form-group">
                @Html.LabelFor(M => Model.User.PaymentTypeId)
                @Html.DropDownListFor(M => Model.User.PaymentTypeId, new SelectList(Model.PaymentTypes, "Id", "Name"), "Seleccione la forma de pago...", new { @class = "form-control" })
                @Html.ValidationMessageFor(M => Model.User.PaymentTypeId)
            </div>


            @Html.HiddenFor(M => Model.User.Id)
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-success"> Crear! </button>
        </fieldset>
        }
    </div>
</div>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}




