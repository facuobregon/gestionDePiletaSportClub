@model gestionDePiletaSportClub.ViewModels.EditUserViewModel
@{
    ViewBag.Title = "UserForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var userLabelAction = Model.User == null ? "Crear usuario" : "Editar usuario";
}

<h2> @userLabelAction </h2>
<hr />


@using (Html.BeginForm("Save", "User", FormMethod.Post, new { @class = "form-horizontal" }))
{

    <div>
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    </div>


    <div class="form-group">
        @Html.LabelFor(M => Model.User.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(M => Model.User.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(M => Model.User.Name)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(M => Model.User.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(M => Model.User.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(M => Model.User.LastName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(M => Model.User.DNI, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(M => Model.User.DNI, new { @class = "form-control" })
            @Html.ValidationMessageFor(M => Model.User.DNI)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(M => Model.User.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(M => Model.User.Email, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(M => Model.User.Email)
        </div>
    </div>
    <div class="form-group">

        @Html.LabelFor(M => Model.User.BirthDay, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(M => Model.User.BirthDay, "{0:dd\\/MM\\/yyyy}", new { @class = "form-control date-time-picker data-val-ignore", @placeholder = "01/01/2020" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(M => Model.User.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(M => Model.User.PhoneNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(M => Model.User.PhoneNumber)
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(M => Model.User.LastPaymentDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(M => Model.User.LastPaymentDate, "{0:dd\\/MM\\/yyyy}", new { @class = "form-control date-time-picker data-val-ignore", @placeholder = "01/01/2020" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(M => Model.User.DueDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(M => Model.User.DueDate, "{0:dd\\/MM\\/yyyy}", new { @class = "form-control date-time-picker data-val-ignore", @placeholder = "01/01/2020" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(M => Model.User.AmountOfActivities, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(M => Model.User.AmountOfActivities, new { @class = "form-control" })
            @Html.ValidationMessageFor(M => Model.User.AmountOfActivities)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(M => Model.User.MembershipTypeId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(M => Model.User.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Seleccione la edad del socio...", new { @class = "form-control js-membership" })
            @Html.ValidationMessageFor(M => Model.User.MembershipTypeId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(M => Model.User.LevelId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(M => Model.User.LevelId, new SelectList(Model.Levels, "Id", "Name"), "Seleccione el nivel del socio...", new { @class = "form-control js-level" })
            @Html.ValidationMessageFor(M => Model.User.LevelId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(M => Model.User.PaymentTypeId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(M => Model.User.PaymentTypeId, new SelectList(Model.PaymentTypes, "Id", "Name"), "Seleccione la forma de pago...", new { @class = "form-control" })
            @Html.ValidationMessageFor(M => Model.User.PaymentTypeId)
        </div>
    </div>

    @Html.HiddenFor(m => m.User.Id)
    @Html.AntiForgeryToken()
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success"> Guardar! </button>

        </div>
    </div>


}

@section scripts{

    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {

            $('.form-horizontal').data('validator').settings.ignore = ".data-val-ignore, :hidden, :disabled";

            //$('.form-horizontal').validate().form();

            var validationErrors = $('.validation-summary-errors ul li');

            validationErrors.each(function (i) {
                toastr.error($(this).text());
            });

            $('.date-time-picker').datetimepicker(
                {
                    "viewMode": 'years',
                    "format": 'DD/MM/YYYY',
                    "locale": 'es',
                    "extraFormats": [moment.ISO_8601]
                });


            $('.js-membership').on("change", function () {
                var id = $(this).val();
                var lvlDropDown = $('.js-level');
                lvlDropDown.children().remove();
                $.ajax(
                    {
                        url: "/api/memberships/" + id + "/levels",
                        method: "GET",
                        success: function (result) {
                            lvlDropDown.append(new Option("Seleccione el nivel del socio...", 0));
                            for (i = 0; i < result.length; i++) {
                                //toastr.success('Level ' + result[i].name + ' buscado con exito');
                                lvlDropDown.append(new Option(result[i].name, result[i].id));
                            }

                        },
                        error: function () {
                            toastr.error('Problemas al buscar niveles');

                        }
                    }
                );

            });
        });
    </script>
}


